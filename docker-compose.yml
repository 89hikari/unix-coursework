version: "3.7"

services:

  openproject:
    container_name: openproject
    build:
      context: openproject-ce
    ports:
      - 5432:5432
      - 8090:80

  gitbucket:
    container_name: gitbucket
    build: 
      context: gitbucket
    ports:
      - "8080:8080"
      - "29418:29418"

  drone_server:
    build: ./drone-server/.
    image: vlad/drone-server:alpine
    container_name: drone_server
    ports:
      - 80:80
      - 443:443
    volumes:
      - /opt/docker/drone/data:/data
      # to avoid 'file or directory does not exist'-errors
      - /opt/docker/drone/lib:/var/lib/drone
    environment:
      - DRONE_GITHUB=true
      - DRONE_GITHUB_SERVER=https://github.com
      - DRONE_GITHUB_SKIP_VERIFY=true
      - DRONE_GITHUB_CLIENT_ID={% your github oauth client id %}
      - DRONE_GITHUB_CLIENT_SECRET={% your github oauth client secret %}
      - DRONE_RPC_SECRET={% your self created rpc call secret %}
      - DRONE_AGENT_SECRET={% your self created rpc call secret, again necessary %}
      - DRONE_HOST=https://{% your subdomain.domain.tld %}
      - DRONE_TLS_AUTOCERT=true
      - DRONE_USER_CREATE=username:{% your desired username %},admin:true
      - SECRET_TOKEN={% your self created secret token in github webhook%}
    restart: always
    networks:
      outpost_network:
      drone_network:

  drone-agent:
    build: ./drone-agent/.
    image: vlad/drone-agent:alpine
    container_name: drone_agent
    command: agent
    restart: unless-stopped
    depends_on:
      - drone_server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_SERVER: "drone_server:9000"
      DRONE_SECRET: "{% your self created rpc call secret, again necessary %}"
    networks:
      drone_network:

networks:
  drone_network: 
  outpost_network:
    external: true